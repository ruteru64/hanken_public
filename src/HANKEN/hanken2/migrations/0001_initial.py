# Generated by Django 4.0.3 on 2022-03-09 03:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='C_charges',
            fields=[
                ('c_charge_id', models.AutoField(primary_key=True, serialize=False)),
                ('c_charge', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Cc_chargeclasses',
            fields=[
                ('cc_id', models.AutoField(primary_key=True, serialize=False)),
                ('cc_name', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='E_events',
            fields=[
                ('e_event_id', models.AutoField(primary_key=True, serialize=False)),
                ('e_event_name', models.CharField(max_length=255)),
                ('e_host_name', models.CharField(max_length=255)),
                ('e_outline', models.TextField()),
                ('e_start', models.DateField(default='0000-00-00')),
                ('e_end', models.DateField(default='0000-00-00')),
                ('e_is_deleted', models.BooleanField(default=False)),
                ('e_created_onat', models.DateTimeField(auto_now_add=True)),
                ('e_update_onat', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sc_seatclasses',
            fields=[
                ('sc_id', models.AutoField(primary_key=True, serialize=False)),
                ('sc_name', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Uc_userclasses',
            fields=[
                ('uc_id', models.AutoField(primary_key=True, serialize=False)),
                ('uc_name', models.CharField(max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Yy_eventtags',
            fields=[
                ('yy_eventtag_id', models.AutoField(primary_key=True, serialize=False)),
                ('yy_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zz_events_connect_tags_zz',
            fields=[
                ('zz_event_id', models.AutoField(primary_key=True, serialize=False)),
                ('e_event_id', models.ForeignKey(db_column='e_event_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.e_events')),
                ('yy_eventtag_id', models.ForeignKey(db_column='yy_eventtag_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.yy_eventtags')),
            ],
        ),
        migrations.CreateModel(
            name='Ww_charges_ww',
            fields=[
                ('ww_charge_id', models.AutoField(primary_key=True, serialize=False)),
                ('c_charge_id', models.ForeignKey(db_column='c_charge_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.c_charges')),
                ('cc_id', models.ForeignKey(db_column='cc_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.cc_chargeclasses')),
                ('sc_id', models.ForeignKey(db_column='sc_id', default=-1, on_delete=django.db.models.deletion.CASCADE, to='hanken2.sc_seatclasses')),
            ],
        ),
        migrations.CreateModel(
            name='U_users',
            fields=[
                ('u_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('u_name', models.CharField(max_length=255)),
                ('u_happy_lucky_birthday', models.DateTimeField()),
                ('u_mail_address', models.EmailField(max_length=254)),
                ('u_phone_number', models.CharField(max_length=11)),
                ('u_password', models.CharField(max_length=255)),
                ('u_photo_of_face', models.URLField(blank=True, default='http://example.com', unique=True)),
                ('u_is_deleted', models.BooleanField(default=False)),
                ('u_created_onat', models.DateTimeField(auto_now_add=True)),
                ('u_update_onat', models.DateTimeField(auto_now=True)),
                ('uc_id', models.ForeignKey(db_column='uc_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.uc_userclasses')),
            ],
        ),
        migrations.CreateModel(
            name='Ti_ticketsinfos',
            fields=[
                ('ti_ticketsinfo_id', models.AutoField(primary_key=True, serialize=False)),
                ('ti_start', models.DateField(blank=True, default='0000-00-00')),
                ('ti_end', models.DateField(blank=True, default='0000-00-00')),
                ('e_event_id', models.OneToOneField(db_column='e_event_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.e_events')),
            ],
        ),
        migrations.CreateModel(
            name='T_tickets',
            fields=[
                ('t_ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('t_sold_onat', models.DateTimeField(auto_now_add=True)),
                ('t_temperature', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('t_is_deleted', models.BooleanField(default=False)),
                ('e_event_id', models.ForeignKey(db_column='e_event_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.e_events')),
                ('u_user_id', models.ForeignKey(db_column='u_user_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.u_users')),
            ],
        ),
        migrations.CreateModel(
            name='S_seats',
            fields=[
                ('s_seats_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_place', models.CharField(default='0000-0000-0000', max_length=255)),
                ('sc_id', models.ForeignKey(db_column='sc_id', default=-1, on_delete=django.db.models.deletion.CASCADE, to='hanken2.sc_seatclasses')),
                ('t_ticket_id', models.OneToOneField(db_column='t_ticket_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.t_tickets')),
                ('ti_ticketsinfo_id', models.ForeignKey(db_column='ti_ticketsinfo_id', default=-1, on_delete=django.db.models.deletion.CASCADE, to='hanken2.ti_ticketsinfos')),
            ],
        ),
        migrations.CreateModel(
            name='P_places',
            fields=[
                ('p_place_id', models.AutoField(primary_key=True, serialize=False)),
                ('p_region', models.CharField(max_length=10)),
                ('p_prefecture', models.CharField(blank=True, default='瑞鶴', max_length=4)),
                ('p_city', models.CharField(blank=True, default='0000000000', max_length=255)),
                ('p_build', models.CharField(max_length=255)),
                ('p_url', models.URLField(blank=True, default='http://example.com')),
                ('p_ido', models.DecimalField(blank=True, decimal_places=5, default=180, max_digits=7)),
                ('p_kedo', models.DecimalField(blank=True, decimal_places=5, default=360, max_digits=8)),
                ('e_event_id', models.OneToOneField(db_column='e_event_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.e_events')),
            ],
        ),
        migrations.CreateModel(
            name='Oo_ticket_connect_charge_oo',
            fields=[
                ('oo_ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('cc_id', models.ForeignKey(db_column='cc_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.cc_chargeclasses')),
                ('t_ticket_id', models.ForeignKey(db_column='t_ticket_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.t_tickets')),
            ],
        ),
        migrations.CreateModel(
            name='O_others',
            fields=[
                ('o_other_id', models.AutoField(primary_key=True, serialize=False)),
                ('o_name', models.CharField(max_length=10)),
                ('o_detail', models.TextField()),
                ('e_event_id', models.ForeignKey(db_column='e_event_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.e_events')),
            ],
        ),
        migrations.CreateModel(
            name='N_nfcs',
            fields=[
                ('n_nfc_local_id', models.AutoField(primary_key=True, serialize=False)),
                ('n_nfcid', models.CharField(max_length=255, unique=True)),
                ('n_is_deleted', models.BooleanField(default=False)),
                ('u_user_id', models.ForeignKey(db_column='u_user_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.u_users')),
            ],
        ),
        migrations.CreateModel(
            name='M_maxes',
            fields=[
                ('m_capacity_id', models.AutoField(primary_key=True, serialize=False)),
                ('m_capacity', models.PositiveIntegerField(blank=True, default=-1)),
                ('sc_id', models.ForeignKey(db_column='sc_id', default=-1, on_delete=django.db.models.deletion.CASCADE, to='hanken2.sc_seatclasses')),
                ('ti_ticketsinfo_id', models.ForeignKey(db_column='ti_ticketsinfo_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.ti_ticketsinfos')),
            ],
        ),
        migrations.CreateModel(
            name='En_enries',
            fields=[
                ('en_entry_id', models.AutoField(primary_key=True, serialize=False)),
                ('en_entry_onat', models.DateTimeField(auto_now_add=True)),
                ('t_ticket_id', models.OneToOneField(db_column='t_ticket_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.t_tickets')),
            ],
        ),
        migrations.AddField(
            model_name='c_charges',
            name='ti_ticketsinfo_id',
            field=models.ForeignKey(db_column='ti_ticketsinfo_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.ti_ticketsinfos'),
        ),
        migrations.CreateModel(
            name='A_addresses',
            fields=[
                ('a_address_id', models.AutoField(primary_key=True, serialize=False)),
                ('a_address_number', models.CharField(max_length=7)),
                ('a_prefecture', models.CharField(max_length=4)),
                ('a_city', models.CharField(max_length=255)),
                ('a_number', models.TextField()),
                ('a_build', models.TextField(blank=True, default='0000000000')),
                ('u_user_id', models.OneToOneField(db_column='u_user_id', on_delete=django.db.models.deletion.CASCADE, to='hanken2.u_users')),
            ],
        ),
    ]
